DELETE FROM theme_candidates WHERE message_item_id IN( SELECT message_item_id FROM message_infos WHERE creation_date < '2009-03-20' );

CREATE TEMPORARY TABLE death_row( id BIGINT PRIMARY KEY ) ENGINE=MyISAM;

INSERT INTO death_row ( id )
  SELECT DISTINCT t.id
  FROM tags t
    INNER JOIN message_infos mi ON mi.message_item_id = t.message_item_id
  WHERE  mi.creation_date < '2009-03-20'
    AND NOT EXISTS( 
        SELECT id FROM link_prefs 
        WHERE link_prefs.linked_item_id = t.theme_item_id
          AND status = 'S'
    );

SELECT name FROM items INNER JOIN item_links ON item_links.other_item_id = items.id WHERE items.type = ‘ThemeItem’ AND item_links.item_id = #{id} ORDER BY weight DESC LIMIT 100

CREATE temporary table tmp_comms as select  message_item_id, author_identity_id, recipient_identity_id, max(recipient_type) AS recipient_type, max(weight) AS weight  from communications GROUP BY message_item_id, author_identity_id, recipient_identity_id;
 
TRUNCATE TABLE communications;
 
INSERT INTO communications( message_item_id, author_identity_id, recipient_identity_id, recipient_type, weight )
SELECT message_item_id, author_identity_id, recipient_identity_id, recipient_type, weight
FROM tmp_comms;
 
DROP TEMPORARY TABLE tmp_comms;
 
select ti1.text, ti2.text, ti3.text, pearsons
from (
  select s1, s2, t,
  (st_count / 101226e0 - (s_count * t_count) / (101226e0 * 101226e0)) /
  sqrt(s_count * st_count) /
  9.8787872791094e-06 pearsons
  from (
    select s1, s2, s_count, t, t_count, count(*) st_count
    from (
      select tc1.theme_item_id s1,
             tc1.other_theme_item_id s2,
             tc1.cooccurrence_count s_count,
             tc2.other_theme_item_id t,
             st.doc_frequency t_count
      from significant_theme_correlations tc1
      join significant_theme_correlations tc2
      on tc2.theme_item_id = tc1.theme_item_id
      join significant_theme_correlations tc3
      on tc3.theme_item_id = tc2.other_theme_item_id
      and tc3.other_theme_item_id = tc1.other_theme_item_id
      join significant_themes st
      on tc2.other_theme_item_id = st.theme_item_id
      where tc1.cooccurrence_count > 5
      and tc2.cooccurrence_count > 5
      and tc3.cooccurrence_count > 5
    ) triples
    join significant_tags tag1
    on tag1.theme_item_id = s1
    join significant_tags tag2
    on tag2.theme_item_id = s2
    and tag2.message_item_id = tag1.message_item_id
    join significant_tags tag3
    on tag3.theme_item_id = t
    and tag3.message_item_id = tag1.message_item_id
    group by s1, s2, t
  ) cooccurrences
  having pearsons > 0.3
) inferences
join theme_infos ti1
on ti1.theme_item_id = s1
join theme_infos ti2
on ti2.theme_item_id = s2
join theme_infos ti3
on ti3.theme_item_id = t;

insert into #{theme_corellations} (theme_item_id, other_theme_item_id, pearsons, cooccurrence_count)
      select tag1.theme_item_id id1, tag2.theme_item_id id2,
            (sum(tag1.frequency * tag2.frequency) / #{message_count} - ti1.mean * ti2.mean) / (ti1.standard_deviation * ti2.standard_deviation) pearsons,
            count(*) count
      from #{tags} tag1
      join #{tags} tag2
      on tag1.message_item_id = tag2.message_item_id
      join #{theme_infos} ti1
      on ti1.theme_item_id = tag1.theme_item_id
      join #{theme_infos} ti2
      on ti2.theme_item_id = tag2.theme_item_id
     
      group by id1, id2
      having count > 1
      and pearsons > #{min_corellation_threshold}
      and id1 != id2
      order by null

select type, count(*) from items group by type;
